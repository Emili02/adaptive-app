{"ast":null,"code":"var _jsxFileName = \"/Users/Emilia/Documents/adaptive-app/client/src/components/TestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = {\n  слесарь: [{\n    id: 1,\n    question: 'Вопрос 1 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 2,\n    question: 'Вопрос 2 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 3,\n    question: 'Вопрос 3 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 4,\n    question: 'Вопрос 4 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }],\n  делопроизводитель: [{\n    id: 5,\n    question: 'Вопрос 5 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 6,\n    question: 'Вопрос 6 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 7,\n    question: 'Вопрос 7 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 8,\n    question: 'Вопрос 8 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }],\n  механник: [{\n    id: 9,\n    question: 'Вопрос 9 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 10,\n    question: 'Вопрос 10 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 11,\n    question: 'Вопрос 11 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 12,\n    question: 'Вопрос 12 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }]\n};\nconst TestPage = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [credentials, setCredentials] = useState(null);\n  const position = 'слесарь'; // Замените на фактическую должность пользователя\n  const navigate = useNavigate();\n  const handleAnswerChange = event => {\n    setAnswers({\n      ...answers,\n      [questions[position][currentQuestionIndex].id]: event.target.value\n    });\n  };\n  const handleNextQuestion = async () => {\n    if (currentQuestionIndex < questions[position].length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Логика завершения теста\n      try {\n        const response = await axios.post('/api/users/complete-test', {\n          answers,\n          position\n        });\n        setCredentials(response.data);\n      } catch (error) {\n        console.error('Ошибка при завершении теста:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), credentials ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"\\u0412\\u0430\\u0448 \\u043B\\u043E\\u0433\\u0438\\u043D: \", credentials.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C: \", credentials.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: questions[position][currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: answers[questions[position][currentQuestionIndex].id] || '',\n        onChange: handleAnswerChange,\n        children: questions[position][currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 69\n          }, this),\n          label: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < questions[position].length - 1 ? 'Далее' : 'Завершить'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"6BYQPiZ9w+eqfE8RQUqy4j6M754=\", false, function () {\n  return [useNavigate];\n});\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","axios","useNavigate","jsxDEV","_jsxDEV","questions","слесарь","id","question","options","делопроизводитель","механник","TestPage","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","credentials","setCredentials","position","navigate","handleAnswerChange","event","target","value","handleNextQuestion","length","response","post","data","error","console","sx","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","username","password","component","onChange","map","option","index","control","label","color","onClick","_c","$RefreshReg$"],"sources":["/Users/Emilia/Documents/adaptive-app/client/src/components/TestPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst questions = {\n  слесарь: [\n    { id: 1, question: 'Вопрос 1 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 2, question: 'Вопрос 2 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 3, question: 'Вопрос 3 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 4, question: 'Вопрос 4 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n  делопроизводитель: [\n    { id: 5, question: 'Вопрос 5 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 6, question: 'Вопрос 6 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 7, question: 'Вопрос 7 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 8, question: 'Вопрос 8 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n  механник: [\n    { id: 9, question: 'Вопрос 9 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 10, question: 'Вопрос 10 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 11, question: 'Вопрос 11 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 12, question: 'Вопрос 12 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n};\n\nconst TestPage = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [credentials, setCredentials] = useState(null);\n  const position = 'слесарь'; // Замените на фактическую должность пользователя\n  const navigate = useNavigate();\n\n  const handleAnswerChange = (event) => {\n    setAnswers({\n      ...answers,\n      [questions[position][currentQuestionIndex].id]: event.target.value,\n    });\n  };\n\n  const handleNextQuestion = async () => {\n    if (currentQuestionIndex < questions[position].length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Логика завершения теста\n      try {\n        const response = await axios.post('/api/users/complete-test', { answers, position });\n        setCredentials(response.data);\n      } catch (error) {\n        console.error('Ошибка при завершении теста:', error);\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>Тестирование</Typography>\n      {credentials ? (\n        <Box>\n          <Typography variant=\"h6\">Ваш логин: {credentials.username}</Typography>\n          <Typography variant=\"h6\">Ваш пароль: {credentials.password}</Typography>\n        </Box>\n      ) : (\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{questions[position][currentQuestionIndex].question}</FormLabel>\n          <RadioGroup\n            value={answers[questions[position][currentQuestionIndex].id] || ''}\n            onChange={handleAnswerChange}\n          >\n            {questions[position][currentQuestionIndex].options.map((option, index) => (\n              <FormControlLabel key={index} value={option} control={<Radio />} label={option} />\n            ))}\n          </RadioGroup>\n          <Button variant=\"contained\" color=\"primary\" sx={{ mt: 2 }} onClick={handleNextQuestion}>\n            {currentQuestionIndex < questions[position].length - 1 ? 'Далее' : 'Завершить'}\n          </Button>\n        </FormControl>\n      )}\n    </Box>\n  );\n};\n\nexport default TestPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}