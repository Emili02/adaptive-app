{"ast":null,"code":"var _jsxFileName = \"/Users/Emilia/Documents/adaptive-app/client/src/components/TestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = {\n  слесарь: [{\n    id: 1,\n    question: 'Вопрос 1 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 2,\n    question: 'Вопрос 2 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 3,\n    question: 'Вопрос 3 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 4,\n    question: 'Вопрос 4 для слесаря',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }],\n  делопроизводитель: [{\n    id: 5,\n    question: 'Вопрос 5 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 6,\n    question: 'Вопрос 6 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 7,\n    question: 'Вопрос 7 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 8,\n    question: 'Вопрос 8 для делопроизводителя',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }],\n  механник: [{\n    id: 9,\n    question: 'Вопрос 9 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 10,\n    question: 'Вопрос 10 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 11,\n    question: 'Вопрос 11 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }, {\n    id: 12,\n    question: 'Вопрос 12 для механника',\n    options: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }]\n};\nconst TestPage = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [credentials, setCredentials] = useState(null);\n  const [error, setError] = useState('');\n  const position = 'слесарь'; // Замените на фактическую должность пользователя\n  const navigate = useNavigate();\n  const handleAnswerChange = event => {\n    setAnswers({\n      ...answers,\n      [questions[position][currentQuestionIndex].id]: event.target.value\n    });\n  };\n  const handleNextQuestion = async () => {\n    try {\n      const response = await axios.post('/api/users/complete-test', {\n        answers,\n        position\n      });\n      if (response.status === 200) {\n        setCredentials(response.data);\n        setTestCompleted(true);\n      } else {\n        setError('Ошибка при завершении теста');\n      }\n    } catch (error) {\n      console.error('Ошибка при завершении теста:', error);\n      setError('Ошибка при завершении теста');\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('/api/users/login', {\n        username: credentials.username,\n        password: credentials.password\n      });\n      if (response.data.success) {\n        navigate('/dashboard'); // Перенаправление на главную страницу после входа\n      } else {\n        console.error('Ошибка при входе');\n      }\n    } catch (error) {\n      console.error('Ошибка при входе:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !testCompleted ? /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: questions[position][currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: answers[questions[position][currentQuestionIndex].id] || '',\n        onChange: handleAnswerChange,\n        children: questions[position][currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 69\n          }, this),\n          label: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < questions[position].length - 1 ? 'Далее' : 'Завершить'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"\\u0412\\u0430\\u0448 \\u043B\\u043E\\u0433\\u0438\\u043D: \", credentials.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C: \", credentials.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogin,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"Nh1Tyj3tkeTLXfnlmjUBF05uKeM=\", false, function () {\n  return [useNavigate];\n});\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","axios","useNavigate","jsxDEV","_jsxDEV","questions","слесарь","id","question","options","делопроизводитель","механник","TestPage","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","testCompleted","setTestCompleted","credentials","setCredentials","error","setError","position","navigate","handleAnswerChange","event","target","value","handleNextQuestion","response","post","status","data","console","handleLogin","username","password","success","sx","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onChange","map","option","index","control","label","color","onClick","length","_c","$RefreshReg$"],"sources":["/Users/Emilia/Documents/adaptive-app/client/src/components/TestPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst questions = {\n  слесарь: [\n    { id: 1, question: 'Вопрос 1 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 2, question: 'Вопрос 2 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 3, question: 'Вопрос 3 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 4, question: 'Вопрос 4 для слесаря', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n  делопроизводитель: [\n    { id: 5, question: 'Вопрос 5 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 6, question: 'Вопрос 6 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 7, question: 'Вопрос 7 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 8, question: 'Вопрос 8 для делопроизводителя', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n  механник: [\n    { id: 9, question: 'Вопрос 9 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 10, question: 'Вопрос 10 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 11, question: 'Вопрос 11 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n    { id: 12, question: 'Вопрос 12 для механника', options: ['Ответ 1', 'Ответ 2', 'Ответ 3'] },\n  ],\n};\n\nconst TestPage = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [credentials, setCredentials] = useState(null);\n  const [error, setError] = useState('');\n  const position = 'слесарь'; // Замените на фактическую должность пользователя\n  const navigate = useNavigate();\n\n  const handleAnswerChange = (event) => {\n    setAnswers({\n      ...answers,\n      [questions[position][currentQuestionIndex].id]: event.target.value,\n    });\n  };\n\n  const handleNextQuestion = async () => {\n    try {\n      const response = await axios.post('/api/users/complete-test', { answers, position });\n      if (response.status === 200) {\n        setCredentials(response.data);\n        setTestCompleted(true);\n      } else {\n        setError('Ошибка при завершении теста');\n      }\n    } catch (error) {\n      console.error('Ошибка при завершении теста:', error);\n      setError('Ошибка при завершении теста');\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('/api/users/login', {\n        username: credentials.username,\n        password: credentials.password,\n      });\n      if (response.data.success) {\n        navigate('/dashboard'); // Перенаправление на главную страницу после входа\n      } else {\n        console.error('Ошибка при входе');\n      }\n    } catch (error) {\n      console.error('Ошибка при входе:', error);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>Тестирование</Typography>\n      {!testCompleted ? (\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{questions[position][currentQuestionIndex].question}</FormLabel>\n          <RadioGroup\n            value={answers[questions[position][currentQuestionIndex].id] || ''}\n            onChange={handleAnswerChange}\n          >\n            {questions[position][currentQuestionIndex].options.map((option, index) => (\n              <FormControlLabel key={index} value={option} control={<Radio />} label={option} />\n            ))}\n          </RadioGroup>\n          <Button variant=\"contained\" color=\"primary\" sx={{ mt: 2 }} onClick={handleNextQuestion}>\n            {currentQuestionIndex < questions[position].length - 1 ? 'Далее' : 'Завершить'}\n          </Button>\n        </FormControl>\n      ) : (\n        <Box>\n          <Typography variant=\"h6\">Ваш логин: {credentials.username}</Typography>\n          <Typography variant=\"h6\">Ваш пароль: {credentials.password}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\n            Войти\n          </Button>\n        </Box>\n      )}\n      {error && <Typography color=\"error\">{error}</Typography>}\n    </Box>\n  );\n};\n\nexport default TestPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}